---
title: Single-cell Morphology Quality Control (coSMicQC)
format:
  poster-typst:
    size: "48x36"
    poster-authors: "Dave BuntenÂ¹\\*, Jenna TomkinsonÂ¹\\*, Vincent RubinettiÂ¹, Gregory WayÂ¹"
    departments: "Â¹Department of Biomedical Informatics, University of Colorado Anschutz Medical Campus\n\n\\*These authors contributed equally to this work."
    institution-logo: "./images/header-combined-images.png"
    footer-text: "Way Lab"
    footer-url: "https://github.com/WayScience/coSMicQC"
    footer-emails: "https://www.waysciencelab.com"
    footer-color: "ADA7FF"
---

## Erroneous outliers and analysis

![_Extra clustering islands can be seen when looking at morphological profiles linked to poor segmentation, which when removed, better reveal patterns in the data._](./images/CFReT_UMAP_combined.png){width=100%}

___Segmentation errors___ during single-cell morphology image analysis such as misidentifying cell compartments or artifacts as cells can lead to inaccurate single-cell measurements and ___erroneous anomalies___ within the data (Figure 1).
___If single-cell quality control is performed, it often uses bespoke methods___ or aggregate data into bulk profiles to avoid discrepancies caused by anomaly outliers.
These techniques make it challenging to perform ___quality control___ on the data, impeding the potential for meaningful discoveries.


## Single-cell quality control package
<!-- commented section to avoid rendering issues, deferring
to render image outside of quarto.
```{mermaid}
%%| fig-cap: "_Enable high-quality data outcomes by checking for outliers with __coSMicQC__._"
%%| label: fig-cosmicqc-flow
%%| fig-width: 50%
-->
<!--
graph LR
    images[("ðŸŒ„ Single-cell<br> Images")] --> cellprofiler["<img src='https://raw.githubusercontent.com/CellProfiler/CellProfiler/main/src/frontend/cellprofiler/data/icons/CellProfiler-favicon-228.png'> CellProfiler"]
    cellprofiler --> profiles[("ðŸ¦  Single-cell <br> Profiles")]
    cytotable["<img src='https://github.com/cytomining/CytoTable/blob/81584bae0551ecdbbca9928cd31f17a9ca2de224/logo/just-icon.png?raw=True'> CytoTable"]
    cytotable --> |find <br> outliers| cosmicqc["<img src='https://wayscience.github.io/coSMicQC/main/_static/just-icon.png'> âœ¨coSMicQC"]
    cosmicqc --> |further <br>analysis| pycytominer["<img src='https://pycytominer.readthedocs.io/en/stable/_static/just-icon.svg'> pcytominer"]

    classDef cellprofiler fill:#FFB3CC,color#000,width:0;
    classDef cytotable fill:#FFEFC2,color:#000;
    classDef cosmicqc fill:#8431D0,color:#fff;
    classDef pycytominer fill:#FCDCFF,color:#000;
    class cellprofiler cellprofiler;
    class cosmicqc cosmicqc;
    class cytotable cytotable;
    class pycytominer pycytominer;
```
-->
![](./images/cosmicqc_flow.png)

To address these challenges, we introduce ___`coSMicQC` (Single-cell Morphology Quality Control)___, an open source Python package designed to enhance the accuracy of single-cell morphology analysis.
__`coSMicQC`__ offers default and customizable thresholds for quality control, integrating seamlessly into both command line and Python API workflows.

## Getting started with coSMicQC

### Installation

```shell
# pip install from pypi
pip install coSMicQC

# or install directly from source
pip install git+https://github.com/WayScience/coSMicQC.git
```

__`coSMicQC`__ may be installed from PyPI or source.

### Finding outliers

```python
import cosmicqc
# find outliers from single-cell profiles
scdf = cosmicqc.analyze.find_outliers(
    df="single-cell-profiles.parquet",
    metadata_columns=[
      "Metadata_ImageNumber",
      "Image_Metadata_Plate_x"
    ],
    feature_thresholds={
      "Nuclei_AreaShape_Area": -1},
)
```

![_The `find_outliers` function in __coSMicQC__ uses single-cell feature thresholds to provide a report on how many outliers were detected (Python API or CLI). We use ___z-scores___ to help define thresholds used throughout coSMicQC._](./images/cosmicqc-example-find-outliers-output.png)

```shell
# CLI interface for coSMicQC find_outliers
$ cosmicqc find_outliers \
  --df single-cell-profiles.parquet \
  --metadata_columns \[Metadata_ImageNumber\] \
  --feature_thresholds '{"Nuclei_AreaShape_Area": -1}'

Number of outliers: 328
Outliers Range:
Nuclei_AreaShape_Area Min: 734.0
...
```

### Visualizing outlier distributions

```python
import cosmicqc
# label and show outliers within the profiles
scdf = cosmicqc.analyze.label_outliers(
    df="single-cell-profiles.parquet",
    include_threshold_scores=True,
).show_report()
```

![*__coSMicQC__ enables erroneous anomaly analysis through the `label_outliers` function, which appends z-score data for features, and the `CytoDataFrame.show_report` method to visualize where outliers are detected within the dataset.*](./images/cosmicqc-example-histogram.png){width=100%}

&nbsp;

### Understanding outlier segmentations

```python
import cosmicqc

# passing image and mask dirs to display images
cosmicqc.CytoDataFrame(
    data="single-cell-profiles.parquet",
    data_context_dir="./image_directory/",
    data_mask_context_dir="./mask_directory/",
)
```

![_Interactive visualizations that help users identify outlier distributions through the ___CytoDataFrame___ â€” a novel data format that links single-cell measurements with their corresponding images and segmentation masks in real-time, enriching data analysis and interpretation._](./images/cosmicqc-example-cytodataframe.png)

## Real-world applications

![_This figure displays the Receiver Operating Characteristic (ROC) Area Under the Curve (AUC) scores for multiple random samples from a holdout dataset that has undergone quality control (QC). The ROC AUC scores are compared between models trained with QC (QC model) and those trained without QC (no-QC model). The QC model demonstrates superior performance, with consistently higher average ROC AUC scores compared to the no-QC model. Statistical analysis reveals a significant difference in performance, with a t-statistic of -72.1 and a p-value of 0.0, indicating that the QC model's enhancement is statistically robust. This highlights the effectiveness of applying QC to improve model accuracy and reliability._](./images/bootstrap_plot_resized.png){width=100%}

![_Single-cell segmentations were evaluated with ___coSMicQC___, identifying which passed (green) or failed (red) quality control (QC) criteria. The left panel showcases field-of-view (FOV) images displaying nuclei from a more standard phenotype while the right panel shows nuclei from a sample with an unusual phenotype. These results illustrate how ___coSMicQC___ effectively distinguishes between high- and low-quality segmentations, aiding in the accurate identification of outliers and ensuring the reliability of downstream analysis for complex biological datasets._](./images/durbin_phenotypes_combined.png){width=100%}

![_Applying ___coSMicQC___ to the JUMP dataset BR00117012 (cpg0000) reveals erroneous outliers, which are highlighted in yellow in the left panel. These outliers significantly impact the UMAP embeddings by altering the spatial distribution of data points. Specifically, the presence of outliers causes shifts in cluster locations or even their removal from the embeddings. In the right panel, orange points represent UMAP embeddings that include these outliers, while blue points denote embeddings generated after removing outliers. Some exemplary areas of significant change are circled in purple within the right panel._](./images/jump_umap_analyses.png){width=100%}

## Acknowledgements

Special thanks goes to the following for their help in contributing to the __coSMicQC__ inspiration, development, or related work.

- ___CU Anschutz CFReT___: Timothy A. McKinsey, Josh Travers
- ___iNFixion___: Michelle Mattson-Hoss, Herb Sarnoff
- ___Cold Spring Harbor Laboratory___: Katherine Alexander
- ___JUMP-Cell Painting Consortium___: Chandrasekaran et al., 2024 (cpg0000)
- ___St. Jude Childrenâ€™s Research Hospital___: Adam D. Durbin, Ha Won Lee, Taosheng Chen, and Noha Shendy
