[tool.poetry]
name = "coSMicQC"
version = "0.0.5.post45.dev0+9a2bfc2"
description = "coSMicQC is a software tool for single-cell quality control of morphology datasets."
authors = ["Way Science Community"]
license = "BSD-3-Clause"
readme = "README.md"
packages = [{include = "cosmicqc", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.8,<3.13"
pandas = [
  {version = "<2.2.2", python = "<3.9"},
  {version = "^2.2.2", python = ">=3.9"}
] # used for data management
scipy = [
  {version = "<1.13.0", python = "<3.9"},
  {version = "^1.13.0", python = ">=3.9"}
] # used for calculations
pyarrow = "^16.0.0" # used for data ingest and export
pyyaml = "^6.0.1" # used for reading yaml configuration files
fire = "^0.6.0" # used for CLI generation
jinja2 = "^3.1.4" # used for template capabilities
plotly = "^5.22.0" # used for report generation capabilities
kaleido = "0.2.1" # used for plotly dependencies
ipython = "^8.12.3" # used for environment detection
scikit-image = [
  {version = "^0.19.3", python = "<3.9"},
  {version = ">0.19.3", python = ">=3.9"}
] # used for image processing
pywavelets = [
  {version = "^1.4.1", python = "<3.9"},
  {version = ">1.4.1", python = ">=3.9"}
] # dependency of scikit-image

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0" # provides testing capabilities for project
html2image = "^2.0.4.3" # used for report html export to image for tests
sqlalchemy = "^2.0.31" # used for test data generation
jupyterlab = "^4.2.3" # used for example notebook work
jupytext = "^1.16.2" # used for example notebook formatting
jupyterlab-code-formatter = "^2.2.1" # used for example notebook formatting
black = "^24.4.2" # used for example notebook formatting
isort = "^5.13.2" # used for example notebook formatting
botocore = "^1.34.133" # used for avoiding dependency resolution issues
cytotable = ">=0.0.9" # used for generating test data

[tool.poetry.scripts]
cosmicqc = "cosmicqc.cli:cli_analyze"

[tool.isort]
profile = "black"

[tool.bandit]
exclude_dirs = ["tests"]

[tool.ruff]
target-version = "py38"
line-length = 88
fix = true

[tool.ruff.lint]
select = [
    # pycodestyle
    "E", "W",
    # isort
    "I",
    # pyflakes
    "F",
    # pylint
    "PL",
    # mccabe
    "C90",
    # ruff
    "RUF",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-simplify
    "SIM",
    # flake8-annotations
    "ANN"
]

[tool.ruff.lint.per-file-ignores]
# Ignore `E402` and `F401` (unused imports) in all `__init__.py` files
"__init__.py" = ["E402", "F401"]
# ignore typing rules for tests
"tests/*" = ["ANN201", "PLR0913", "PLR2004"]

[tool.jupytext]
formats = "ipynb,py:light"

[tool.pytest.ini_options]
markers = [
    "generate_report_image: tests which involve the creation of report images.",
    "large_data_tests: tests which involve the use of large data."
]

# set dynamic versioning capabilities for project
[tool.poetry-dynamic-versioning]
enable = false
style = "pep440"
vcs = "git"

# specify where version replacement is performed
[tool.poetry-dynamic-versioning.substitution]
files = ["src/cosmicqc/__init__.py"]

# set persistent versions within the __init__.py file in cases
# where we may not have or want access to full git history
[tool.poetry-dynamic-versioning.files."src/cosmicqc/__init__.py"]
persistent-substitution = true

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.setuptools_scm]
root = "."
