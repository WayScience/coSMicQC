[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = [ "poetry-core>=1", "poetry-dynamic-versioning>=1,<2" ]

[tool.poetry]
name = "coSMicQC"
version = "0.0.0"
description = "coSMicQC is a software tool for single-cell quality control of morphology datasets."
authors = [ "Way Science Community" ]
license = "BSD-3-Clause"
readme = "README.md"
packages = [ { include = "cosmicqc", from = "src" } ]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
pandas = [
  { version = "<2.2.2", python = "<3.9" },
  { version = "^2.2.2", python = ">=3.9" },
] # used for data management
scipy = [
  { version = "<1.13.0", python = "<3.9" },
  { version = "^1.13.0", python = ">=3.9" },
] # used for calculations
# used for data ingest and export
pyarrow = ">=16,<21"
# used for reading yaml configuration files
pyyaml = "^6.0.1"
# used for CLI generation
fire = ">=0.6,<0.8"
# used for assisting single-cell profile and image analysis
cytodataframe = ">=0.0.11"
seaborn = "^0.13.2"
matplotlib = "^3.10.3"

[tool.poetry.group.dev.dependencies]
# provides testing capabilities for project
pytest = "^8.2.0"
# used for report html export to image for tests
html2image = "^2.0.4.3"
# used for test data generation
sqlalchemy = ">=1.3.6,<3"
# used for example notebook work
jupyterlab = "^4.2.3"
# used for example notebook formatting
jupytext = "^1.16.2"
# used for example notebook formatting
jupyterlab-code-formatter = ">=2.2.1,<4.0.0"
# used for example notebook formatting
black = ">=24.4.2,<26.0.0"
# used for example notebook formatting
isort = ">=5.13.2,<7.0.0"
# added to generate test coverage reports
coverage = "^7.6.0"
# for standardizing various dev tasks
poethepoet = ">=0.27,<0.35"
# added for preparing data for cosmicqc in examples
cytotable = ">=0.0.10,<0.0.16"
# used to avoid dependency resolution issues during installs
botocore = ">=1.31.16,<1.31.65 || >=1.32.4,<1.34.35 || >=1.34.41,<1.34.163 || >=1.35.0,<1.35.8"
# used for visualizing large plot data
hvplot = ">=0.10,<0.12"
# used for visualization options with hvplot
datashader = ">=0.16.3,<0.18.0"
# added for demonstrating results after using cosmicqc
umap-learn = "^0.5.6"
# added for compatibility in notebooks with umap-learn dependency tqdm
ipywidgets = "^8.1.5"
# added for demonstrating results with cosmicqc
pycytominer = "^1.1.0"
# added to avoid warnings from datashader implementation
dask = { version = ">=2024.8,<2026.0", extras = [ "dataframe" ] }
# used for rendering plots as images within example notebooks
selenium = "^4.24.0"
# used by pandas for extracting metadata and platemap data from S3 through pandas
s3fs = ">=2024.9,<2026.0"

[tool.poetry.group.docs.dependencies]
# used for rendering docs into docsite
sphinx = ">=7,<9"
# used for rendering markdown through sphinx
myst-parser = ">=3,<5"
# used for rendering notebooks through myst parser
myst-nb = "^1.1.1"
# used for extension sphinx-multiversion and to fix git-based challenges with default branch handling
sphinx-multiversion = { git = "https://github.com/J-RN/sphinx-multiversion", rev = "a77f0c862dace3a62c18fc866da60ef7dde3873d" }
# used for gathering version data for docsite
dunamai = "^1.22.0"
# used for theming the docsite
sphinx-wagtail-theme = "^6.3.0"

[tool.poetry.scripts]
cosmicqc = "cosmicqc.cli:cli_analyze"

[tool.poetry.requires-plugins]
poetry-dynamic-versioning = { version = ">=1.0.0,<2.0.0", extras = [ "plugin" ] }

[tool.poetry-dynamic-versioning]
enable = true
style = "pep440"
vcs = "git"

# specify where version replacement is performed
[tool.poetry-dynamic-versioning.substitution]
files = [ "src/cosmicqc/__init__.py" ]

# defines various development tasks

[tool.setuptools_scm]
root = "."

[tool.ruff]
target-version = "py310"
line-length = 88
fix = true

lint.select = [
  # flake8-builtins
  "A",
  # flake8-annotations
  "ANN",
  # flake8-comprehensions
  "C4",
  # mccabe
  "C90",
  # pycodestyle
  "E",
  # pyflakes
  "F",
  # isort
  "I",
  # pylint
  "PL",
  # ruff
  "RUF",
  # flake8-simplify
  "SIM",
  "W",
]
# Ignore `E402` and `F401` (unused imports) in all `__init__.py` files
lint.per-file-ignores."__init__.py" = [ "E402", "F401" ]
# ignore long line and func def warnings with notebooks
lint.per-file-ignores."docs/src/examples/*.ipynb" = [ "E501", "E703", "PLR0913" ]
lint.per-file-ignores."docs/src/examples/*.py" = [ "E501", "E703", "PLR0913" ]
# ignore typing rules for tests
lint.per-file-ignores."tests/*" = [ "ANN201", "ANN202", "PLR0913" ]

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
markers = [
  "generate_report_image: tests which involve the creation of report images.",
]

[tool.coverage.run]
# settings to avoid errors with cv2 and coverage
# see here for more: https://github.com/nedbat/coveragepy/issues/1653
omit = [
  "config.py",
  "config-3.py",
]

# set dynamic versioning capabilities for project

[tool.bandit]
exclude_dirs = [ "tests" ]

[tool.jupytext]
formats = "ipynb,py:light"

[tool.poe.tasks]
# note: quarto commands below expect quarto installed on the local system.
# see here for more information: https://quarto.org/docs/download/
poster-preview.shell = """
quarto preview \
  docs/presentations/2024-09-18-SBI2-Conference/poster.qmd
"""
poster-render.shell = """
  quarto render \
  docs/presentations/2024-09-18-SBI2-Conference/poster.qmd
  mkdir docs/src/media
  mv docs/presentations/2024-09-18-SBI2-Conference/sbi2-2024-cosmicqc-poster.pdf \
  docs/src/media
"""

[tool.vulture]
min_confidence = 90
paths = [ "src/cosmicqc", "tests" ]
