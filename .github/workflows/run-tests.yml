---
# used for running tests
name: tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  pre_commit_checks:
    runs-on: ubuntu-22.04
    steps:
      # checks out the repo
      - uses: actions/checkout@v4
        with:
          # fetch tags for versioning details
          fetch-depth: 0
      - name: Fetch tags
        run: git fetch --all --tags
      - name: Python setup
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Setup for poetry
        run: |
          python -m pip install poetry
          poetry self add "poetry-dynamic-versioning[plugin]"
      - name: Install environment
        run: poetry install --no-interaction --no-ansi
      # run pre-commit
      - uses: pre-commit/action@v3.0.1
        id: pre_commit
      # run pre-commit ci lite for automated fixes
      - uses: pre-commit-ci/lite-action@v1.1.0
        if: ${{ !cancelled() if: ${{ !cancelled() }}if: ${{ !cancelled() }} steps.pre_commit.outcome == 'failure' }}
  run_tests:
    strategy:
      matrix:
        python_version: ["3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-22.04, macos-14]
    runs-on: ${{ matrix.os }}
    env:
      OS: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
        # fetch tags for versioning details
          fetch-depth: 0
      - name: Fetch tags
        run: git fetch --all --tags
      - name: Python setup
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
      - name: Setup for poetry
        run: |
          python -m pip install poetry
          poetry self add "poetry-dynamic-versioning[plugin]"
      - name: Install environment
        run: poetry install --no-interaction --no-ansi
      - name: Run pytest
        # run all tests except those marked generate_report_image
        run: poetry run pytest -m "not generate_report_image"
